Your  program will  read in  a  file  consisting  of lines  containing a  string 
followed by an integer. 

There  are zero or  more white space  characters before  the string, between the 
string and the integer, and after the integer. White  space can  be  a space  or 
a tab. 

The string consists of printable  ASCII characters (there are 95 of them) in the
range  0x20 to 0x7E  (32-126 in decimal), and  is delimited by  quotation marks. 
Inside the string a  quotation mark can  be included by preceding  it by what is 
known as an escape character. The escape  character we will use is the backslash 
character (\). Two backslashes can be used to include a single backslash itself. 
Thus, the  sequence  \" represents a  quotation mark  inside  a string,  and the 
sequence \\ represents a backslash inside a string. Any  other use of the escape 
character  is an error.

After the string is an integer. The integer consists of  any contiguous sequence
of digits.  It cannot  be negative,  and thus  cannot have a minus sign  or plus 
sign. It may, however, have any number of leading zeroes. 

Errors in the input file should cause your program to immediately halt and print
 "Error at line N.", where N  is replaced  by the line  where the  error occurs. 

The output  of the  program  is  a set  of lines  consisting  the string  inside 
quotation marks,  with backslash and  quotation marks properly  escaped, and the 
maximum   integer  found  for   that  string. The  lines  should  be  output  in
lexicographic  order.  You can  imagine  that the  string is a key, and that the
integer is the maximum value  for that key.  This output should be  written to a 
file with the same name as the  input, except that -results has been appended to
the file name. 

We guarantee that there will be no more than 10,000 unique strings and that each
string will be no  more than  20 characters long. If using C or C++, you can use 
the is* family of functions shown here.